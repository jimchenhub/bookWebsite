<li>
第1章 C语言编程<br>
1.1 C语言<br>
1.2 标准库<br>
1.3 学习C<br>
1.4 创建C程序<br>
1.4.1 编辑<br>
1.4.2 编译<br>
1.4.3 链接<br>
1.4.4 执行<br>
1.5 创建第一个程序<br>
1.6 编辑第一个程序<br>
1.7 处理错误<br>
1.8 剖析一个简单的程序<br>
1.8.1 注释<br>
1.8.2 预处理指令<br>
1.8.3 定义main()函数<br>
1.8.4 关键字<br>
1.8.5 函数体<br>
1.8.6 输出信息<br>
1.8.7 参数<br>
1.8.8 控制符<br>
1.8.9 三字母序列<br>
1.9 预处理器<br>
1.10 用C语言开发程序<br>
1.10.1 了解问题<br>
1.10.2 详细设计<br>
1.10.3 实施<br>
1.10.4 测试<br>
1.11 函数及模块化编程<br>
1.12 常见错误<br>
1.13 要点<br>
1.14 小结<br>
1.15 习题
<br>
</li>
<li>
第2章 编程初步<br>
2.1 计算机的内存<br>
2.2 什么是变量<br>
2.3 存储整数的变量<br>
2.3.1 变量的使用<br>
2.3.2 变量的初始化<br>
2.4 变量与内存<br>
2.4.1 带符号的整数类型<br>
2.4.2 无符号的整数类型<br>
2.4.3 指定整数常量<br>
2.5 使用浮点数<br>
2.6 浮点数变量<br>
2.6.1 使用浮点数完成除法运算<br>
2.6.2 控制输出中的小数位数<br>
2.6.3 控制输出的字段宽度<br>
2.7 较复杂的表达式<br>
2.8 定义命名常量<br>
2.8.1 极限值<br>
2.8.2 sizeof运算符<br>
2.9 选择正确的类型<br>
2.10 强制类型转换<br>
2.10.1 自动转换类型<br>
2.10.2 隐式类型转换的规则<br>
2.10.3 赋值语句中的隐式类型转换<br>
2.11 再谈数值数据类型<br>
2.11.1 字符类型<br>
2.11.2 字符的输入输出<br>
2.11.3 枚举<br>
2.11.4 存储布尔值的变量<br>
2.12 赋值操作的op=形式<br>
2.13 数学函数<br>
2.14 设计一个程序<br>
2.14.1 问题<br>
2.14.2 分析<br>
2.14.3 解决方案<br>
2.15 小结<br>
2.16 练习
<br>
</li>
<li>
第3章 条件判断<br>
3.1 判断过程<br>
3.1.1 算术比较<br>
3.1.2 基本的if语句<br>
3.1.3 扩展if语句：if-else<br>
3.1.4 在if语句中使用代码块<br>
3.1.5 嵌套的if语句<br>
3.1.6 测试字符<br>
3.1.7 逻辑运算符<br>
3.1.8 条件运算符<br>
3.1.9 运算符的优先级<br>
3.2 多项选择问题<br>
3.2.1 给多项选择使用else-if语句<br>
3.2.2 switch语句<br>
3.2.3 goto语句<br>
3.3 按位运算符<br>
3.3.1 按位运算符的op=用法<br>
3.3.2 使用按位运算符<br>
3.4 设计程序<br>
3.4.1 问题<br>
3.4.2 分析<br>
3.4.3 解决方案<br>
3.5 小结<br>
3.6 练习
<br>
</li>
<li>
第4章 循环<br>
4.1 循环<br>
4.2 递增和递减运算符<br>
4.3 for循环<br>
4.4 for循环的一般语法<br>
4.5 再谈递增和递减运算符<br>
4.5.1 递增运算符<br>
4.5.2 递增运算符的前置和后置形式<br>
4.5.3 递减运算符<br>
4.6 再论for循环<br>
4.6.1 修改for循环变量<br>
4.6.2 没有参数的for循环<br>
4.6.3 循环内的break语句<br>
4.6.4 使用for循环限制输入<br>
4.6.5 生成伪随机整数<br>
4.6.6 再谈循环控制选项<br>
4.6.7 浮点类型的循环控制变量<br>
4.7 while循环<br>
4.8 嵌套循环<br>
4.9 嵌套循环和goto语句<br>
4.10 do-while循环<br>
4.11 continue语句<br>
4.12 设计程序<br>
4.12.1 问题<br>
4.12.2 分析<br>
4.12.3 解决方案<br>
4.13 小结<br>
4.14 习题
<br>
</li>
<li>
第5章 数组<br>
5.1 数组简介<br>
5.1.1 不用数组的程序<br>
5.1.2 什么是数组<br>
5.1.3 使用数组<br>
5.2 寻址运算符<br>
5.3 数组和地址<br>
5.4 数组的初始化<br>
5.5 确定数组的大小<br>
5.6 多维数组<br>
5.7 多维数组的初始化<br>
5.8 变长数组<br>
5.9 设计一个程序<br>
5.9.1 问题<br>
5.9.2 分析<br>
5.9.3 解决方案<br>
5.10 小结<br>
5.11 习题
<br>
</li>
<li>
第6章 字符串和文本的应用<br>
6.1 什么是字符串<br>
6.2 存储字符串的变量<br>
6.3 字符串操作<br>
6.3.1 检查对C11的支持<br>
6.3.2 确定字符串的长度<br>
6.3.3 复制字符串<br>
6.3.4 连接字符串<br>
6.3.5 比较字符串<br>
6.3.6 搜索字符串<br>
6.3.7 单元化字符串<br>
6.3.8 将换行符读入字符串<br>
6.4 分析和转换字符串<br>
6.4.1 转换字符的大小写形式<br>
6.4.2 将字符串转换成数值<br>
6.5 设计一个程序<br>
6.5.1 问题<br>
6.5.2 分析<br>
6.5.3 解决方案<br>
6.6 小结<br>
6.7 习题
<br>
</li>
<li>
第7章 指针<br>
7.1 指针初探<br>
7.1.1 声明指针<br>
7.1.2 通过指针访问值<br>
7.1.3 使用指针<br>
7.1.4 指向常量的指针<br>
7.1.5 常量指针<br>
7.1.6 指针的命名<br>
7.2 数组和指针<br>
7.3 多维数组<br>
7.3.1 多维数组和指针<br>
7.3.2 访问数组元素<br>
7.4 内存的使用<br>
7.4.1 动态内存分配：malloc()函数<br>
7.4.2 释放动态分配的内存<br>
7.4.3 用calloc()函数分配内存<br>
7.4.4 扩展动态分配的内存<br>
7.5 使用指针处理字符串<br>
7.5.1 使用指针数组<br>
7.5.2 指针和数组记号<br>
7.6 设计程序<br>
7.6.1 问题<br>
7.6.2 分析<br>
7.6.3 解决方案<br>
7.7 小结<br>
7.8 习题
<br>
</li>
<li>
第8章 编程的结构<br>
8.1 程序的结构<br>
8.1.1 变量的作用域和生存期<br>
8.1.2 变量的作用域和函数<br>
8.2 函数<br>
8.2.1 定义函数<br>
8.2.2 return语句<br>
8.3 按值传递机制<br>
8.4 函数原型<br>
8.5 指针用作参数和返回值<br>
8.5.1 常量参数<br>
8.5.2 返回指针的风险<br>
8.6 小结<br>
8.7 习题
<br>
</li>
<li>
第9章 函数再探<br>
9.1 函数指针<br>
9.1.1 声明函数指针<br>
9.1.2 通过函数指针调用函数<br>
9.1.3 函数指针的数组<br>
9.1.4 作为变元的函数指针<br>
9.2 函数中的变量<br>
9.2.1 静态变量：函数内部的追踪<br>
9.2.2 在函数之间共享变量<br>
9.3 调用自己的函数：递归<br>
9.4 变元个数可变的函数<br>
9.4.1 复制va_list<br>
9.4.2 长度可变的变元列表的基本规则<br>
9.5 main()函数<br>
9.6 结束程序<br>
9.6.1 abort()函数<br>
9.6.2 exit()和atexit()函数<br>
9.6.3 _Exit()函数<br>
9.6.4 quick_exit()和at_quick_exit()函数<br>
9.7 提高性能<br>
9.7.1 内联声明函数<br>
9.7.2 使用restrict关键字<br>
9.7.3 _Noreturn函数限定符<br>
9.8 设计程序<br>
9.8.1 问题<br>
9.8.2 分析<br>
9.8.3 解决方案<br>
9.9 小结<br>
9.10 习题
<br>
</li>
<li>
第10章 基本输入和输出操作<br>
10.1 输入和输出流<br>
10.2 标准流<br>
10.3 键盘输入<br>
10.3.1 格式化键盘输入<br>
10.3.2 输入格式控制字符串<br>
10.3.3 输入格式字符串中的字符<br>
10.3.4 输入浮点数的各种变化<br>
10.3.5 读取十六进制和八进制值<br>
10.3.6 用scanf_s()读取字符<br>
10.3.7 从键盘上输入字符串<br>
10.3.8 单个字符的键盘输入<br>
10.4 屏幕输出<br>
10.4.1 使用printf_s()的格式化输出<br>
10.4.2 转义序列<br>
10.4.3 整数输出<br>
10.4.4 输出浮点数<br>
10.4.5 字符输出<br>
10.5 其他输出函数<br>
10.5.1 屏幕的非格式化输出<br>
10.5.2 数组的格式化输出<br>
10.5.3 数组的格式化输入<br>
10.6 小结<br>
10.7 习题
<br>
</li>
<li>
第11章 结构化数据<br>
11.1 数据结构：使用struct<br>
11.1.1 定义结构类型和结构变量<br>
11.1.2 访问结构成员<br>
11.1.3 未命名的结构<br>
11.1.4 结构数组<br>
11.1.5 表达式中的结构成员<br>
11.1.6 结构指针<br>
11.1.7 为结构动态分配内存<br>
11.2 再探结构成员<br>
11.2.1 将一个结构作为另一个结构的成员<br>
11.2.2 声明结构中的结构<br>
11.2.3 将结构指针用作结构成员<br>
11.2.4 双向链表<br>
11.2.5 结构中的位字段<br>
11.3 结构与函数<br>
11.3.1 结构作为函数的变元<br>
11.3.2 结构指针作为函数变元<br>
11.3.3 作为函数返回值的结构<br>
11.3.4 二叉树<br>
11.4 共享内存<br>
11.5 设计程序<br>
11.5.1 问题<br>
11.5.2 分析<br>
11.5.3 解决方案<br>
11.6 小结<br>
11.7 习题
<br>
</li>
<li>
第12章 处理文件<br>
12.1 文件的概念<br>
12.1.1 文件中的位置<br>
12.1.2 文件流<br>
12.2 文件访问<br>
12.2.1 打开文件<br>
12.2.2 缓存文件操作<br>
12.2.3 文件重命名<br>
12.2.4 关闭文件<br>
12.2.5 删除文件<br>
12.3 写入文本文件<br>
12.4 读取文本文件<br>
12.5 在文本文件中读写字符串<br>
12.6 格式化文件的输入输出<br>
12.6.1 格式化文件输出<br>
12.6.2 格式化文件输入<br>
12.7 错误处理<br>
12.8 再探文本文件操作模式<br>
12.9 freopen_s()函数<br>
12.10 二进制文件的输入输出<br>
12.10.1 以二进制模式打开文件<br>
12.10.2 写入二进制文件<br>
12.10.3 读取二进制文件<br>
12.11 在文件中移动<br>
12.11.1 文件定位操作<br>
12.11.2 找出我们在文件中的位置<br>
12.11.3 在文件中设定位置<br>
12.12 使用临时文件<br>
12.12.1 创建临时文件<br>
12.12.2 创建唯一的文件名<br>
12.13 更新二进制文件<br>
12.13.1 修改文件的内容<br>
12.13.2 从键盘输入创建记录<br>
12.13.3 将记录写入文件<br>
12.13.4 从文件中读取记录<br>
12.13.5 写入文件<br>
12.13.6 列出文件内容<br>
12.13.7 更新已有的文件内容<br>
12.14 文件打开模式小结<br>
12.15 设计程序<br>
12.15.1 问题<br>
12.15.2 分析<br>
12.15.3 解决方案<br>
12.16 小结<br>
12.17 习题
<br>
</li>
<li>
第13章 支持功能<br>
13.1 预处理<br>
13.1.1 在程序中包含头文件<br>
13.1.2 定义自己的头文件<br>
13.1.3 管理多个源文件<br>
13.1.4 外部变量<br>
13.1.5 静态函数<br>
13.1.6 替换程序源代码<br>
13.2 宏<br>
13.2.1 看起来像函数的宏<br>
13.2.2 字符串作为宏参数<br>
13.2.3 在宏展开式中结合两个变元<br>
13.3 多行上的预处理器指令<br>
13.3.1 预处理器逻辑指令<br>
13.3.2 条件编译<br>
13.3.3 测试多个条件<br>
13.3.4 取消定义的标识符<br>
13.3.5 测试标识符的指定值的指令<br>
13.3.6 多项选择<br>
13.3.7 标准预处理宏<br>
13.4 调试方法<br>
13.4.1 集成的调试器<br>
13.4.2 调试阶段的预处理器<br>
13.4.3 断言<br>
13.5 日期和时间函数<br>
13.5.1 获取时间值<br>
13.5.2 获取日期<br>
13.5.3 确定某一天是星期几<br>
13.6 小结<br>
13.7 习题
<br>
</li>
<li>
第14章 高级专用主题<br>
14.1 使用国际字符集<br>
14.1.1 理解Unicode<br>
14.1.2 设置区域<br>
14.1.3 宽字符类型wchar_t<br>
14.1.4 宽字符串的操作<br>
14.1.5 宽字符的文件流操作<br>
14.1.6 存储Unicode字符的固定大小类型<br>
14.2 用于可移植性的专用整数类型<br>
14.2.1 固定宽度的整型<br>
14.2.2 最小宽度的整型<br>
14.2.3 最大宽度的整型<br>
14.3 复数类型<br>
14.3.1 复数基础<br>
14.3.2 复数类型和操作<br>
14.4 用线程编程<br>
14.4.1 创建线程<br>
14.4.2 退出线程<br>
14.4.3 把一个线程连接到另一个线程上<br>
14.4.4 挂起线程<br>
14.4.5 管理线程对数据的访问<br>
14.5 小结
<br>
</li>
<li>
附录A 计算机中的数学知识</li>
<li>
附录B ASCII字符代码定义</li>
<li>
附录C C语言中的保留字</li>
<li>
附录D 输入输出格式说明符</li>
<li>
附录E 标准库头文件 </li>